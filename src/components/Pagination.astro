---
export interface Props {
  currentPage: number;
  totalPages: number;
  category: string;
  tag: string;
}

const { currentPage, totalPages, category, tag } = Astro.props;

const getPageUrl = (page: number) => {
  let path = '';
  const categorySlug = category.toLowerCase();

  if (category !== 'all' && tag !== 'all') {
    path = `${categorySlug}/@${tag}`;
  } else if (category !== 'all') {
    path = categorySlug;
  } else if (tag !== 'all') {
    path = `@${tag}`;
  }

  if (page > 1) {
    path = path ? `${path}/${page}` : `${page}`;
  }

  return `/${path}`;
};
---

<nav class="mt-12 flex justify-center" aria-label="Pagination">
  <ul class="flex items-center -space-x-px h-10 text-base">
    <!-- Previous Button -->
    <li>
      <a
        href={currentPage > 1 ? getPageUrl(currentPage - 1) : '#'}
        class:list={[
          'flex items-center justify-center px-4 h-10 ms-0 leading-tight text-gray-500 bg-white border border-e-0 border-gray-300 rounded-s-lg',
          currentPage > 1
            ? 'hover:bg-gray-100 hover:text-gray-700'
            : 'opacity-50 cursor-not-allowed',
        ]}
      >
        <span class="sr-only">Previous</span>
        <svg
          class="w-3 h-3"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 6 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 1 1 5l4 4"></path>
        </svg>
      </a>
    </li>
    <!-- Page Numbers -->
    {
      Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
        <li>
          <a
            href={getPageUrl(page)}
            class:list={[
              'flex items-center justify-center px-4 h-10 leading-tight border border-gray-300',
              page === currentPage
                ? 'text-blue-600 bg-blue-50 hover:bg-blue-100 hover:text-blue-700'
                : 'text-gray-500 bg-white hover:bg-gray-100 hover:text-gray-700',
            ]}
          >
            {page}
          </a>
        </li>
      ))
    }
    <!-- Next Button -->
    <li>
      <a
        href={currentPage < totalPages ? getPageUrl(currentPage + 1) : '#'}
        class:list={[
          'flex items-center justify-center px-4 h-10 leading-tight text-gray-500 bg-white border border-gray-300 rounded-e-lg',
          currentPage < totalPages
            ? 'hover:bg-gray-100 hover:text-gray-700'
            : 'opacity-50 cursor-not-allowed',
        ]}
      >
        <span class="sr-only">Next</span>
        <svg
          class="w-3 h-3"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 6 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="m1 9 4-4-4-4"></path>
        </svg>
      </a>
    </li>
  </ul>
</nav> 